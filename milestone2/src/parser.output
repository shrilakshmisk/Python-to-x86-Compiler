Terminals unused in grammar

    DOUBLE_QUOTE
    SINGLE_QUOTE
    ASSERT
    IS
    COLON_EQUAL


Grammar

    0 $accept: unit $end

    1 unit: file_input

    2 file_input: ε
    3           | NEWLINE file_input
    4           | stmt file_input

    5 $@1: ε

    6 funcdef: DEF NAME parameters COLON $@1 func_body_suite

    7 $@2: ε

    8 funcdef: DEF NAME parameters ARROW test COLON $@2 func_body_suite

    9 parameters: OPEN_ROUND_BRACKET CLOSE_ROUND_BRACKET
   10           | OPEN_ROUND_BRACKET typedargslist CLOSE_ROUND_BRACKET

   11 typedargslist: tfpdef Multi_tfpdef

   12 Multi_tfpdef: ε
   13             | COMMA tfpdef Multi_tfpdef

   14 tfpdef: NAME COLON test
   15       | NAME

   16 stmt: simple_stmt
   17     | compound_stmt

   18 simple_stmt: small_stmt Multi_small_stmt NEWLINE

   19 Multi_small_stmt: ε
   20                 | SEMICOLON small_stmt Multi_small_stmt

   21 small_stmt: expr_stmt
   22           | flow_stmt
   23           | global_stmt

   24 expr_stmt: Lhs_init COLON test EQUAL test
   25          | Lhs_init COLON test
   26          | NAME OPEN_ROUND_BRACKET Opt_arglist CLOSE_ROUND_BRACKET
   27          | NAME DOT NAME OPEN_ROUND_BRACKET Opt_arglist CLOSE_ROUND_BRACKET
   28          | atom
   29          | Lhs_noninit EQUAL test
   30          | Lhs_noninit PLUS_EQUAL test
   31          | Lhs_noninit MINUS_EQUAL test
   32          | Lhs_noninit STAR_EQUAL test
   33          | Lhs_noninit SLASH_EQUAL test
   34          | Lhs_noninit PERCENTAGE_EQUAL test
   35          | Lhs_noninit AND_EQUAL test
   36          | Lhs_noninit OR_EQUAL test
   37          | Lhs_noninit XOR_EQUAL test
   38          | Lhs_noninit LEFT_SHIFT_EQUAL test
   39          | Lhs_noninit RIGHT_SHIFT_EQUAL test
   40          | Lhs_noninit DOUBLE_STAR_EQUAL test
   41          | Lhs_noninit DOUBLE_SLASH_EQUAL test

   42 Lhs_init: NAME
   43         | NAME DOT NAME

   44 Lhs_noninit: NAME
   45            | NAME DOT NAME
   46            | NAME OPEN_SQUARE_BRACKET test CLOSE_SQUARE_BRACKET
   47            | NAME DOT NAME OPEN_SQUARE_BRACKET test CLOSE_SQUARE_BRACKET

   48 flow_stmt: BREAK
   49          | CONTINUE
   50          | RETURN
   51          | RETURN test

   52 Opt_test: ε
   53         | test

   54 global_stmt: GLOBAL NAME Multi_name

   55 Multi_name: ε
   56           | COMMA NAME Multi_name

   57 compound_stmt: if_stmt
   58              | while_stmt
   59              | for_stmt
   60              | funcdef
   61              | classdef

   62 if_stmt: dummy_if_suit Multi_elif Opt_else

   63 dummy_if_suit: dummyifstmt suite

   64 dummyifstmt: IF test COLON

   65 Multi_elif: ε

   66 $@3: ε

   67 Multi_elif: dummyelifstmt suite $@3 Multi_elif

   68 dummyelifstmt: ELIF test COLON

   69 Opt_else: ε
   70         | ELSE COLON suite

   71 dummyWhilestmt: WHILE

   72 dummyWhilestmt1: dummyWhilestmt test

   73 while_stmt: dummyWhilestmt1 COLON suite

   74 dummy_for_stmt: FOR NAME IN test

   75 for_stmt: dummy_for_stmt COLON suite

   76 suite: simple_stmt
   77      | NEWLINE INDENT Nonzero_stmt DEDENT

   78 Nonzero_stmt: stmt
   79             | stmt Nonzero_stmt

   80 test: or_test

   81 or_test: and_test
   82        | or_test OR and_test

   83 and_test: not_test
   84         | and_test AND not_test

   85 not_test: NOT not_test
   86         | comparison

   87 comparison: expr
   88           | comparison LESSER expr
   89           | comparison GREATER expr
   90           | comparison DOUBLE_EQUAL expr
   91           | comparison GREATER_EQUAL expr
   92           | comparison LESSER_EQUAL expr
   93           | comparison NOT_EQUAL expr
   94           | comparison IN expr

   95 expr: xor_expr
   96     | expr OR_OP xor_expr

   97 xor_expr: and_expr
   98         | xor_expr XOR and_expr

   99 and_expr: shift_expr
  100         | and_expr AND_OP shift_expr

  101 shift_expr: arith_expr
  102           | shift_expr LEFT_SHIFT arith_expr
  103           | shift_expr RIGHT_SHIFT arith_expr

  104 arith_expr: term
  105           | arith_expr PLUS term
  106           | arith_expr MINUS term

  107 term: factor
  108     | term STAR factor
  109     | term SLASH factor
  110     | term PERCENTAGE factor
  111     | term DOUBLE_SLASH factor

  112 factor: PLUS factor
  113       | MINUS factor
  114       | NOT_OP factor
  115       | power

  116 power: atom_expr
  117      | atom_expr DOUBLE_STAR factor

  118 atom_expr: atom Multi_trailer

  119 Multi_trailer: ε
  120              | trailer Multi_trailer

  121 atom: OPEN_ROUND_BRACKET Opt_test CLOSE_ROUND_BRACKET
  122     | OPEN_SQUARE_BRACKET testlist CLOSE_SQUARE_BRACKET
  123     | NAME
  124     | NUMBER
  125     | STRING
  126     | NONE
  127     | TRUE
  128     | FALSE

  129 trailer: OPEN_ROUND_BRACKET Opt_arglist CLOSE_ROUND_BRACKET
  130        | OPEN_SQUARE_BRACKET test CLOSE_SQUARE_BRACKET
  131        | DOT NAME

  132 Opt_arglist: ε
  133            | arglist

  134 testlist: test Multi_test

  135 Multi_test: ε
  136           | COMMA test Multi_test

  137 $@4: ε

  138 classdef: CLASS NAME COLON $@4 suite

  139 $@5: ε

  140 classdef: CLASS NAME OPEN_ROUND_BRACKET NAME CLOSE_ROUND_BRACKET COLON $@5 suite

  141 arglist: argument Multi_argument

  142 Multi_argument: ε
  143               | COMMA argument Multi_argument

  144 argument: test

  145 func_body_suite: simple_stmt
  146                | NEWLINE INDENT Nonzero_stmt DEDENT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    STRING <token_attr> (258) 125
    INDENT <token_attr> (259) 77 146
    DEDENT <token_attr> (260) 77 146
    DOUBLE_QUOTE <token_attr> (261)
    SINGLE_QUOTE <token_attr> (262)
    BREAK <token_attr> (263) 48
    CONTINUE <token_attr> (264) 49
    RETURN <token_attr> (265) 50 51
    GLOBAL <token_attr> (266) 54
    ASSERT <token_attr> (267)
    CLASS <token_attr> (268) 138 140
    DEF <token_attr> (269) 6 8
    IF <token_attr> (270) 64
    ELIF <token_attr> (271) 68
    ELSE <token_attr> (272) 70
    WHILE <token_attr> (273) 71
    FOR <token_attr> (274) 74
    IN <token_attr> (275) 74 94
    NONE <token_attr> (276) 126
    TRUE <token_attr> (277) 127
    FALSE <token_attr> (278) 128
    OR <token_attr> (279) 82
    AND <token_attr> (280) 84
    NOT <token_attr> (281) 85
    IS <token_attr> (282)
    OPEN_ROUND_BRACKET <token_attr> (283) 9 10 26 27 121 129 140
    ARROW <token_attr> (284) 8
    SEMICOLON <token_attr> (285) 20
    COLON <token_attr> (286) 6 8 14 24 25 64 68 70 73 75 138 140
    EQUAL <token_attr> (287) 24 29
    PLUS_EQUAL <token_attr> (288) 30
    MINUS_EQUAL <token_attr> (289) 31
    STAR_EQUAL <token_attr> (290) 32
    SLASH_EQUAL <token_attr> (291) 33
    PERCENTAGE_EQUAL <token_attr> (292) 34
    AND_EQUAL <token_attr> (293) 35
    OR_EQUAL <token_attr> (294) 36
    XOR_EQUAL <token_attr> (295) 37
    LEFT_SHIFT_EQUAL <token_attr> (296) 38
    RIGHT_SHIFT_EQUAL <token_attr> (297) 39
    DOUBLE_STAR_EQUAL <token_attr> (298) 40
    DOUBLE_SLASH_EQUAL <token_attr> (299) 41
    COMMA <token_attr> (300) 13 56 136 143
    DOT <token_attr> (301) 27 43 45 47 131
    STAR <token_attr> (302) 108
    SLASH <token_attr> (303) 109
    DOUBLE_STAR <token_attr> (304) 117
    OR_OP <token_attr> (305) 96
    PLUS <token_attr> (306) 105 112
    MINUS <token_attr> (307) 106 113
    OPEN_SQUARE_BRACKET <token_attr> (308) 46 47 122 130
    COLON_EQUAL <token_attr> (309)
    DOUBLE_EQUAL <token_attr> (310) 90
    NOT_EQUAL <token_attr> (311) 93
    LESSER_EQUAL <token_attr> (312) 92
    LESSER <token_attr> (313) 88
    GREATER_EQUAL <token_attr> (314) 91
    GREATER <token_attr> (315) 89
    XOR <token_attr> (316) 98
    AND_OP <token_attr> (317) 100
    LEFT_SHIFT <token_attr> (318) 102
    RIGHT_SHIFT <token_attr> (319) 103
    DOUBLE_SLASH <token_attr> (320) 111
    PERCENTAGE <token_attr> (321) 110
    NOT_OP <token_attr> (322) 114
    NAME <token_attr> (323) 6 8 14 15 26 27 42 43 44 45 46 47 54 56 74 123 131 138 140
    NEWLINE <token_attr> (324) 3 18 77 146
    NUMBER <token_attr> (325) 124
    CLOSE_ROUND_BRACKET <token_attr> (326) 9 10 26 27 121 129 140
    CLOSE_SQUARE_BRACKET <token_attr> (327) 46 47 122 130


Nonterminals, with rules where they appear

    $accept (73)
        on left: 0
    unit <type_attr> (74)
        on left: 1
        on right: 0
    file_input <type_attr> (75)
        on left: 2 3 4
        on right: 1 3 4
    funcdef <type_attr> (76)
        on left: 6 8
        on right: 60
    $@1 (77)
        on left: 5
        on right: 6
    $@2 (78)
        on left: 7
        on right: 8
    parameters <type_attr> (79)
        on left: 9 10
        on right: 6 8
    typedargslist <type_attr> (80)
        on left: 11
        on right: 10
    Multi_tfpdef <type_attr> (81)
        on left: 12 13
        on right: 11 13
    tfpdef <type_attr> (82)
        on left: 14 15
        on right: 11 13
    stmt <type_attr> (83)
        on left: 16 17
        on right: 4 78 79
    simple_stmt <type_attr> (84)
        on left: 18
        on right: 16 76 145
    Multi_small_stmt <type_attr> (85)
        on left: 19 20
        on right: 18 20
    small_stmt <type_attr> (86)
        on left: 21 22 23
        on right: 18 20
    expr_stmt <type_attr> (87)
        on left: 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41
        on right: 21
    Lhs_init <type_attr> (88)
        on left: 42 43
        on right: 24 25
    Lhs_noninit <type_attr> (89)
        on left: 44 45 46 47
        on right: 29 30 31 32 33 34 35 36 37 38 39 40 41
    flow_stmt <type_attr> (90)
        on left: 48 49 50 51
        on right: 22
    Opt_test <type_attr> (91)
        on left: 52 53
        on right: 121
    global_stmt <type_attr> (92)
        on left: 54
        on right: 23
    Multi_name <type_attr> (93)
        on left: 55 56
        on right: 54 56
    compound_stmt <type_attr> (94)
        on left: 57 58 59 60 61
        on right: 17
    if_stmt <type_attr> (95)
        on left: 62
        on right: 57
    dummy_if_suit <type_attr> (96)
        on left: 63
        on right: 62
    dummyifstmt <type_attr> (97)
        on left: 64
        on right: 63
    Multi_elif <type_attr> (98)
        on left: 65 67
        on right: 62 67
    $@3 (99)
        on left: 66
        on right: 67
    dummyelifstmt <type_attr> (100)
        on left: 68
        on right: 67
    Opt_else <type_attr> (101)
        on left: 69 70
        on right: 62
    dummyWhilestmt <type_attr> (102)
        on left: 71
        on right: 72
    dummyWhilestmt1 <type_attr> (103)
        on left: 72
        on right: 73
    while_stmt <type_attr> (104)
        on left: 73
        on right: 58
    dummy_for_stmt <type_attr> (105)
        on left: 74
        on right: 75
    for_stmt <type_attr> (106)
        on left: 75
        on right: 59
    suite <type_attr> (107)
        on left: 76 77
        on right: 63 67 70 73 75 138 140
    Nonzero_stmt <type_attr> (108)
        on left: 78 79
        on right: 77 79 146
    test <type_attr> (109)
        on left: 80
        on right: 8 14 24 25 29 30 31 32 33 34 35 36 37 38 39 40 41 46 47 51 53 64 68 72 74 130 134 136 144
    or_test <type_attr> (110)
        on left: 81 82
        on right: 80 82
    and_test <type_attr> (111)
        on left: 83 84
        on right: 81 82 84
    not_test <type_attr> (112)
        on left: 85 86
        on right: 83 84 85
    comparison <type_attr> (113)
        on left: 87 88 89 90 91 92 93 94
        on right: 86 88 89 90 91 92 93 94
    expr <type_attr> (114)
        on left: 95 96
        on right: 87 88 89 90 91 92 93 94 96
    xor_expr <type_attr> (115)
        on left: 97 98
        on right: 95 96 98
    and_expr <type_attr> (116)
        on left: 99 100
        on right: 97 98 100
    shift_expr <type_attr> (117)
        on left: 101 102 103
        on right: 99 100 102 103
    arith_expr <type_attr> (118)
        on left: 104 105 106
        on right: 101 102 103 105 106
    term <type_attr> (119)
        on left: 107 108 109 110 111
        on right: 104 105 106 108 109 110 111
    factor <type_attr> (120)
        on left: 112 113 114 115
        on right: 107 108 109 110 111 112 113 114 117
    power <type_attr> (121)
        on left: 116 117
        on right: 115
    atom_expr <type_attr> (122)
        on left: 118
        on right: 116 117
    Multi_trailer <type_attr> (123)
        on left: 119 120
        on right: 118 120
    atom <type_attr> (124)
        on left: 121 122 123 124 125 126 127 128
        on right: 28 118
    trailer <type_attr> (125)
        on left: 129 130 131
        on right: 120
    Opt_arglist <type_attr> (126)
        on left: 132 133
        on right: 26 27 129
    testlist <type_attr> (127)
        on left: 134
        on right: 122
    Multi_test <type_attr> (128)
        on left: 135 136
        on right: 134 136
    classdef <type_attr> (129)
        on left: 138 140
        on right: 61
    $@4 (130)
        on left: 137
        on right: 138
    $@5 (131)
        on left: 139
        on right: 140
    arglist <type_attr> (132)
        on left: 141
        on right: 133
    Multi_argument <type_attr> (133)
        on left: 142 143
        on right: 141 143
    argument <type_attr> (134)
        on left: 144
        on right: 141 143
    func_body_suite <type_attr> (135)
        on left: 145 146
        on right: 6 8


State 0

    0 $accept: • unit $end

    STRING               shift, and go to state 1
    BREAK                shift, and go to state 2
    CONTINUE             shift, and go to state 3
    RETURN               shift, and go to state 4
    GLOBAL               shift, and go to state 5
    CLASS                shift, and go to state 6
    DEF                  shift, and go to state 7
    IF                   shift, and go to state 8
    WHILE                shift, and go to state 9
    FOR                  shift, and go to state 10
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NAME                 shift, and go to state 16
    NEWLINE              shift, and go to state 17
    NUMBER               shift, and go to state 18

    $default  reduce using rule 2 (file_input)

    unit             go to state 19
    file_input       go to state 20
    funcdef          go to state 21
    stmt             go to state 22
    simple_stmt      go to state 23
    small_stmt       go to state 24
    expr_stmt        go to state 25
    Lhs_init         go to state 26
    Lhs_noninit      go to state 27
    flow_stmt        go to state 28
    global_stmt      go to state 29
    compound_stmt    go to state 30
    if_stmt          go to state 31
    dummy_if_suit    go to state 32
    dummyifstmt      go to state 33
    dummyWhilestmt   go to state 34
    dummyWhilestmt1  go to state 35
    while_stmt       go to state 36
    dummy_for_stmt   go to state 37
    for_stmt         go to state 38
    atom             go to state 39
    classdef         go to state 40


State 1

  125 atom: STRING •

    $default  reduce using rule 125 (atom)


State 2

   48 flow_stmt: BREAK •

    $default  reduce using rule 48 (flow_stmt)


State 3

   49 flow_stmt: CONTINUE •

    $default  reduce using rule 49 (flow_stmt)


State 4

   50 flow_stmt: RETURN •
   51          | RETURN • test

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    $default  reduce using rule 50 (flow_stmt)

    test        go to state 46
    or_test     go to state 47
    and_test    go to state 48
    not_test    go to state 49
    comparison  go to state 50
    expr        go to state 51
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 5

   54 global_stmt: GLOBAL • NAME Multi_name

    NAME  shift, and go to state 61


State 6

  138 classdef: CLASS • NAME COLON $@4 suite
  140         | CLASS • NAME OPEN_ROUND_BRACKET NAME CLOSE_ROUND_BRACKET COLON $@5 suite

    NAME  shift, and go to state 62


State 7

    6 funcdef: DEF • NAME parameters COLON $@1 func_body_suite
    8        | DEF • NAME parameters ARROW test COLON $@2 func_body_suite

    NAME  shift, and go to state 63


State 8

   64 dummyifstmt: IF • test COLON

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    test        go to state 64
    or_test     go to state 47
    and_test    go to state 48
    not_test    go to state 49
    comparison  go to state 50
    expr        go to state 51
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 9

   71 dummyWhilestmt: WHILE •

    $default  reduce using rule 71 (dummyWhilestmt)


State 10

   74 dummy_for_stmt: FOR • NAME IN test

    NAME  shift, and go to state 65


State 11

  126 atom: NONE •

    $default  reduce using rule 126 (atom)


State 12

  127 atom: TRUE •

    $default  reduce using rule 127 (atom)


State 13

  128 atom: FALSE •

    $default  reduce using rule 128 (atom)


State 14

  121 atom: OPEN_ROUND_BRACKET • Opt_test CLOSE_ROUND_BRACKET

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    $default  reduce using rule 52 (Opt_test)

    Opt_test    go to state 66
    test        go to state 67
    or_test     go to state 47
    and_test    go to state 48
    not_test    go to state 49
    comparison  go to state 50
    expr        go to state 51
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 15

  122 atom: OPEN_SQUARE_BRACKET • testlist CLOSE_SQUARE_BRACKET

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    test        go to state 68
    or_test     go to state 47
    and_test    go to state 48
    not_test    go to state 49
    comparison  go to state 50
    expr        go to state 51
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60
    testlist    go to state 69


State 16

   26 expr_stmt: NAME • OPEN_ROUND_BRACKET Opt_arglist CLOSE_ROUND_BRACKET
   27          | NAME • DOT NAME OPEN_ROUND_BRACKET Opt_arglist CLOSE_ROUND_BRACKET
   42 Lhs_init: NAME •
   43         | NAME • DOT NAME
   44 Lhs_noninit: NAME •
   45            | NAME • DOT NAME
   46            | NAME • OPEN_SQUARE_BRACKET test CLOSE_SQUARE_BRACKET
   47            | NAME • DOT NAME OPEN_SQUARE_BRACKET test CLOSE_SQUARE_BRACKET
  123 atom: NAME •

    OPEN_ROUND_BRACKET   shift, and go to state 70
    DOT                  shift, and go to state 71
    OPEN_SQUARE_BRACKET  shift, and go to state 72

    SEMICOLON  reduce using rule 123 (atom)
    COLON      reduce using rule 42 (Lhs_init)
    NEWLINE    reduce using rule 123 (atom)
    $default   reduce using rule 44 (Lhs_noninit)


State 17

    3 file_input: NEWLINE • file_input

    STRING               shift, and go to state 1
    BREAK                shift, and go to state 2
    CONTINUE             shift, and go to state 3
    RETURN               shift, and go to state 4
    GLOBAL               shift, and go to state 5
    CLASS                shift, and go to state 6
    DEF                  shift, and go to state 7
    IF                   shift, and go to state 8
    WHILE                shift, and go to state 9
    FOR                  shift, and go to state 10
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NAME                 shift, and go to state 16
    NEWLINE              shift, and go to state 17
    NUMBER               shift, and go to state 18

    $default  reduce using rule 2 (file_input)

    file_input       go to state 73
    funcdef          go to state 21
    stmt             go to state 22
    simple_stmt      go to state 23
    small_stmt       go to state 24
    expr_stmt        go to state 25
    Lhs_init         go to state 26
    Lhs_noninit      go to state 27
    flow_stmt        go to state 28
    global_stmt      go to state 29
    compound_stmt    go to state 30
    if_stmt          go to state 31
    dummy_if_suit    go to state 32
    dummyifstmt      go to state 33
    dummyWhilestmt   go to state 34
    dummyWhilestmt1  go to state 35
    while_stmt       go to state 36
    dummy_for_stmt   go to state 37
    for_stmt         go to state 38
    atom             go to state 39
    classdef         go to state 40


State 18

  124 atom: NUMBER •

    $default  reduce using rule 124 (atom)


State 19

    0 $accept: unit • $end

    $end  shift, and go to state 74


State 20

    1 unit: file_input •

    $default  reduce using rule 1 (unit)


State 21

   60 compound_stmt: funcdef •

    $default  reduce using rule 60 (compound_stmt)


State 22

    4 file_input: stmt • file_input

    STRING               shift, and go to state 1
    BREAK                shift, and go to state 2
    CONTINUE             shift, and go to state 3
    RETURN               shift, and go to state 4
    GLOBAL               shift, and go to state 5
    CLASS                shift, and go to state 6
    DEF                  shift, and go to state 7
    IF                   shift, and go to state 8
    WHILE                shift, and go to state 9
    FOR                  shift, and go to state 10
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NAME                 shift, and go to state 16
    NEWLINE              shift, and go to state 17
    NUMBER               shift, and go to state 18

    $default  reduce using rule 2 (file_input)

    file_input       go to state 75
    funcdef          go to state 21
    stmt             go to state 22
    simple_stmt      go to state 23
    small_stmt       go to state 24
    expr_stmt        go to state 25
    Lhs_init         go to state 26
    Lhs_noninit      go to state 27
    flow_stmt        go to state 28
    global_stmt      go to state 29
    compound_stmt    go to state 30
    if_stmt          go to state 31
    dummy_if_suit    go to state 32
    dummyifstmt      go to state 33
    dummyWhilestmt   go to state 34
    dummyWhilestmt1  go to state 35
    while_stmt       go to state 36
    dummy_for_stmt   go to state 37
    for_stmt         go to state 38
    atom             go to state 39
    classdef         go to state 40


State 23

   16 stmt: simple_stmt •

    $default  reduce using rule 16 (stmt)


State 24

   18 simple_stmt: small_stmt • Multi_small_stmt NEWLINE

    SEMICOLON  shift, and go to state 76

    $default  reduce using rule 19 (Multi_small_stmt)

    Multi_small_stmt  go to state 77


State 25

   21 small_stmt: expr_stmt •

    $default  reduce using rule 21 (small_stmt)


State 26

   24 expr_stmt: Lhs_init • COLON test EQUAL test
   25          | Lhs_init • COLON test

    COLON  shift, and go to state 78


State 27

   29 expr_stmt: Lhs_noninit • EQUAL test
   30          | Lhs_noninit • PLUS_EQUAL test
   31          | Lhs_noninit • MINUS_EQUAL test
   32          | Lhs_noninit • STAR_EQUAL test
   33          | Lhs_noninit • SLASH_EQUAL test
   34          | Lhs_noninit • PERCENTAGE_EQUAL test
   35          | Lhs_noninit • AND_EQUAL test
   36          | Lhs_noninit • OR_EQUAL test
   37          | Lhs_noninit • XOR_EQUAL test
   38          | Lhs_noninit • LEFT_SHIFT_EQUAL test
   39          | Lhs_noninit • RIGHT_SHIFT_EQUAL test
   40          | Lhs_noninit • DOUBLE_STAR_EQUAL test
   41          | Lhs_noninit • DOUBLE_SLASH_EQUAL test

    EQUAL               shift, and go to state 79
    PLUS_EQUAL          shift, and go to state 80
    MINUS_EQUAL         shift, and go to state 81
    STAR_EQUAL          shift, and go to state 82
    SLASH_EQUAL         shift, and go to state 83
    PERCENTAGE_EQUAL    shift, and go to state 84
    AND_EQUAL           shift, and go to state 85
    OR_EQUAL            shift, and go to state 86
    XOR_EQUAL           shift, and go to state 87
    LEFT_SHIFT_EQUAL    shift, and go to state 88
    RIGHT_SHIFT_EQUAL   shift, and go to state 89
    DOUBLE_STAR_EQUAL   shift, and go to state 90
    DOUBLE_SLASH_EQUAL  shift, and go to state 91


State 28

   22 small_stmt: flow_stmt •

    $default  reduce using rule 22 (small_stmt)


State 29

   23 small_stmt: global_stmt •

    $default  reduce using rule 23 (small_stmt)


State 30

   17 stmt: compound_stmt •

    $default  reduce using rule 17 (stmt)


State 31

   57 compound_stmt: if_stmt •

    $default  reduce using rule 57 (compound_stmt)


State 32

   62 if_stmt: dummy_if_suit • Multi_elif Opt_else

    ELIF  shift, and go to state 92

    $default  reduce using rule 65 (Multi_elif)

    Multi_elif     go to state 93
    dummyelifstmt  go to state 94


State 33

   63 dummy_if_suit: dummyifstmt • suite

    STRING               shift, and go to state 1
    BREAK                shift, and go to state 2
    CONTINUE             shift, and go to state 3
    RETURN               shift, and go to state 4
    GLOBAL               shift, and go to state 5
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NAME                 shift, and go to state 16
    NEWLINE              shift, and go to state 95
    NUMBER               shift, and go to state 18

    simple_stmt  go to state 96
    small_stmt   go to state 24
    expr_stmt    go to state 25
    Lhs_init     go to state 26
    Lhs_noninit  go to state 27
    flow_stmt    go to state 28
    global_stmt  go to state 29
    suite        go to state 97
    atom         go to state 39


State 34

   72 dummyWhilestmt1: dummyWhilestmt • test

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    test        go to state 98
    or_test     go to state 47
    and_test    go to state 48
    not_test    go to state 49
    comparison  go to state 50
    expr        go to state 51
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 35

   73 while_stmt: dummyWhilestmt1 • COLON suite

    COLON  shift, and go to state 99


State 36

   58 compound_stmt: while_stmt •

    $default  reduce using rule 58 (compound_stmt)


State 37

   75 for_stmt: dummy_for_stmt • COLON suite

    COLON  shift, and go to state 100


State 38

   59 compound_stmt: for_stmt •

    $default  reduce using rule 59 (compound_stmt)


State 39

   28 expr_stmt: atom •

    $default  reduce using rule 28 (expr_stmt)


State 40

   61 compound_stmt: classdef •

    $default  reduce using rule 61 (compound_stmt)


State 41

   85 not_test: NOT • not_test

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    not_test    go to state 101
    comparison  go to state 50
    expr        go to state 51
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 42

  112 factor: PLUS • factor

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    factor     go to state 102
    power      go to state 58
    atom_expr  go to state 59
    atom       go to state 60


State 43

  113 factor: MINUS • factor

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    factor     go to state 103
    power      go to state 58
    atom_expr  go to state 59
    atom       go to state 60


State 44

  114 factor: NOT_OP • factor

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    factor     go to state 104
    power      go to state 58
    atom_expr  go to state 59
    atom       go to state 60


State 45

  123 atom: NAME •

    $default  reduce using rule 123 (atom)


State 46

   51 flow_stmt: RETURN test •

    $default  reduce using rule 51 (flow_stmt)


State 47

   80 test: or_test •
   82 or_test: or_test • OR and_test

    OR  shift, and go to state 105

    $default  reduce using rule 80 (test)


State 48

   81 or_test: and_test •
   84 and_test: and_test • AND not_test

    AND  shift, and go to state 106

    $default  reduce using rule 81 (or_test)


State 49

   83 and_test: not_test •

    $default  reduce using rule 83 (and_test)


State 50

   86 not_test: comparison •
   88 comparison: comparison • LESSER expr
   89           | comparison • GREATER expr
   90           | comparison • DOUBLE_EQUAL expr
   91           | comparison • GREATER_EQUAL expr
   92           | comparison • LESSER_EQUAL expr
   93           | comparison • NOT_EQUAL expr
   94           | comparison • IN expr

    IN             shift, and go to state 107
    DOUBLE_EQUAL   shift, and go to state 108
    NOT_EQUAL      shift, and go to state 109
    LESSER_EQUAL   shift, and go to state 110
    LESSER         shift, and go to state 111
    GREATER_EQUAL  shift, and go to state 112
    GREATER        shift, and go to state 113

    $default  reduce using rule 86 (not_test)


State 51

   87 comparison: expr •
   96 expr: expr • OR_OP xor_expr

    OR_OP  shift, and go to state 114

    $default  reduce using rule 87 (comparison)


State 52

   95 expr: xor_expr •
   98 xor_expr: xor_expr • XOR and_expr

    XOR  shift, and go to state 115

    $default  reduce using rule 95 (expr)


State 53

   97 xor_expr: and_expr •
  100 and_expr: and_expr • AND_OP shift_expr

    AND_OP  shift, and go to state 116

    $default  reduce using rule 97 (xor_expr)


State 54

   99 and_expr: shift_expr •
  102 shift_expr: shift_expr • LEFT_SHIFT arith_expr
  103           | shift_expr • RIGHT_SHIFT arith_expr

    LEFT_SHIFT   shift, and go to state 117
    RIGHT_SHIFT  shift, and go to state 118

    $default  reduce using rule 99 (and_expr)


State 55

  101 shift_expr: arith_expr •
  105 arith_expr: arith_expr • PLUS term
  106           | arith_expr • MINUS term

    PLUS   shift, and go to state 119
    MINUS  shift, and go to state 120

    $default  reduce using rule 101 (shift_expr)


State 56

  104 arith_expr: term •
  108 term: term • STAR factor
  109     | term • SLASH factor
  110     | term • PERCENTAGE factor
  111     | term • DOUBLE_SLASH factor

    STAR          shift, and go to state 121
    SLASH         shift, and go to state 122
    DOUBLE_SLASH  shift, and go to state 123
    PERCENTAGE    shift, and go to state 124

    $default  reduce using rule 104 (arith_expr)


State 57

  107 term: factor •

    $default  reduce using rule 107 (term)


State 58

  115 factor: power •

    $default  reduce using rule 115 (factor)


State 59

  116 power: atom_expr •
  117      | atom_expr • DOUBLE_STAR factor

    DOUBLE_STAR  shift, and go to state 125

    $default  reduce using rule 116 (power)


State 60

  118 atom_expr: atom • Multi_trailer

    OPEN_ROUND_BRACKET   shift, and go to state 126
    DOT                  shift, and go to state 127
    OPEN_SQUARE_BRACKET  shift, and go to state 128

    $default  reduce using rule 119 (Multi_trailer)

    Multi_trailer  go to state 129
    trailer        go to state 130


State 61

   54 global_stmt: GLOBAL NAME • Multi_name

    COMMA  shift, and go to state 131

    $default  reduce using rule 55 (Multi_name)

    Multi_name  go to state 132


State 62

  138 classdef: CLASS NAME • COLON $@4 suite
  140         | CLASS NAME • OPEN_ROUND_BRACKET NAME CLOSE_ROUND_BRACKET COLON $@5 suite

    OPEN_ROUND_BRACKET  shift, and go to state 133
    COLON               shift, and go to state 134


State 63

    6 funcdef: DEF NAME • parameters COLON $@1 func_body_suite
    8        | DEF NAME • parameters ARROW test COLON $@2 func_body_suite

    OPEN_ROUND_BRACKET  shift, and go to state 135

    parameters  go to state 136


State 64

   64 dummyifstmt: IF test • COLON

    COLON  shift, and go to state 137


State 65

   74 dummy_for_stmt: FOR NAME • IN test

    IN  shift, and go to state 138


State 66

  121 atom: OPEN_ROUND_BRACKET Opt_test • CLOSE_ROUND_BRACKET

    CLOSE_ROUND_BRACKET  shift, and go to state 139


State 67

   53 Opt_test: test •

    $default  reduce using rule 53 (Opt_test)


State 68

  134 testlist: test • Multi_test

    COMMA  shift, and go to state 140

    $default  reduce using rule 135 (Multi_test)

    Multi_test  go to state 141


State 69

  122 atom: OPEN_SQUARE_BRACKET testlist • CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET  shift, and go to state 142


State 70

   26 expr_stmt: NAME OPEN_ROUND_BRACKET • Opt_arglist CLOSE_ROUND_BRACKET

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    $default  reduce using rule 132 (Opt_arglist)

    test         go to state 143
    or_test      go to state 47
    and_test     go to state 48
    not_test     go to state 49
    comparison   go to state 50
    expr         go to state 51
    xor_expr     go to state 52
    and_expr     go to state 53
    shift_expr   go to state 54
    arith_expr   go to state 55
    term         go to state 56
    factor       go to state 57
    power        go to state 58
    atom_expr    go to state 59
    atom         go to state 60
    Opt_arglist  go to state 144
    arglist      go to state 145
    argument     go to state 146


State 71

   27 expr_stmt: NAME DOT • NAME OPEN_ROUND_BRACKET Opt_arglist CLOSE_ROUND_BRACKET
   43 Lhs_init: NAME DOT • NAME
   45 Lhs_noninit: NAME DOT • NAME
   47            | NAME DOT • NAME OPEN_SQUARE_BRACKET test CLOSE_SQUARE_BRACKET

    NAME  shift, and go to state 147


State 72

   46 Lhs_noninit: NAME OPEN_SQUARE_BRACKET • test CLOSE_SQUARE_BRACKET

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    test        go to state 148
    or_test     go to state 47
    and_test    go to state 48
    not_test    go to state 49
    comparison  go to state 50
    expr        go to state 51
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 73

    3 file_input: NEWLINE file_input •

    $default  reduce using rule 3 (file_input)


State 74

    0 $accept: unit $end •

    $default  accept


State 75

    4 file_input: stmt file_input •

    $default  reduce using rule 4 (file_input)


State 76

   20 Multi_small_stmt: SEMICOLON • small_stmt Multi_small_stmt

    STRING               shift, and go to state 1
    BREAK                shift, and go to state 2
    CONTINUE             shift, and go to state 3
    RETURN               shift, and go to state 4
    GLOBAL               shift, and go to state 5
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NAME                 shift, and go to state 16
    NUMBER               shift, and go to state 18

    small_stmt   go to state 149
    expr_stmt    go to state 25
    Lhs_init     go to state 26
    Lhs_noninit  go to state 27
    flow_stmt    go to state 28
    global_stmt  go to state 29
    atom         go to state 39


State 77

   18 simple_stmt: small_stmt Multi_small_stmt • NEWLINE

    NEWLINE  shift, and go to state 150


State 78

   24 expr_stmt: Lhs_init COLON • test EQUAL test
   25          | Lhs_init COLON • test

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    test        go to state 151
    or_test     go to state 47
    and_test    go to state 48
    not_test    go to state 49
    comparison  go to state 50
    expr        go to state 51
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 79

   29 expr_stmt: Lhs_noninit EQUAL • test

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    test        go to state 152
    or_test     go to state 47
    and_test    go to state 48
    not_test    go to state 49
    comparison  go to state 50
    expr        go to state 51
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 80

   30 expr_stmt: Lhs_noninit PLUS_EQUAL • test

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    test        go to state 153
    or_test     go to state 47
    and_test    go to state 48
    not_test    go to state 49
    comparison  go to state 50
    expr        go to state 51
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 81

   31 expr_stmt: Lhs_noninit MINUS_EQUAL • test

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    test        go to state 154
    or_test     go to state 47
    and_test    go to state 48
    not_test    go to state 49
    comparison  go to state 50
    expr        go to state 51
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 82

   32 expr_stmt: Lhs_noninit STAR_EQUAL • test

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    test        go to state 155
    or_test     go to state 47
    and_test    go to state 48
    not_test    go to state 49
    comparison  go to state 50
    expr        go to state 51
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 83

   33 expr_stmt: Lhs_noninit SLASH_EQUAL • test

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    test        go to state 156
    or_test     go to state 47
    and_test    go to state 48
    not_test    go to state 49
    comparison  go to state 50
    expr        go to state 51
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 84

   34 expr_stmt: Lhs_noninit PERCENTAGE_EQUAL • test

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    test        go to state 157
    or_test     go to state 47
    and_test    go to state 48
    not_test    go to state 49
    comparison  go to state 50
    expr        go to state 51
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 85

   35 expr_stmt: Lhs_noninit AND_EQUAL • test

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    test        go to state 158
    or_test     go to state 47
    and_test    go to state 48
    not_test    go to state 49
    comparison  go to state 50
    expr        go to state 51
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 86

   36 expr_stmt: Lhs_noninit OR_EQUAL • test

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    test        go to state 159
    or_test     go to state 47
    and_test    go to state 48
    not_test    go to state 49
    comparison  go to state 50
    expr        go to state 51
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 87

   37 expr_stmt: Lhs_noninit XOR_EQUAL • test

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    test        go to state 160
    or_test     go to state 47
    and_test    go to state 48
    not_test    go to state 49
    comparison  go to state 50
    expr        go to state 51
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 88

   38 expr_stmt: Lhs_noninit LEFT_SHIFT_EQUAL • test

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    test        go to state 161
    or_test     go to state 47
    and_test    go to state 48
    not_test    go to state 49
    comparison  go to state 50
    expr        go to state 51
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 89

   39 expr_stmt: Lhs_noninit RIGHT_SHIFT_EQUAL • test

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    test        go to state 162
    or_test     go to state 47
    and_test    go to state 48
    not_test    go to state 49
    comparison  go to state 50
    expr        go to state 51
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 90

   40 expr_stmt: Lhs_noninit DOUBLE_STAR_EQUAL • test

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    test        go to state 163
    or_test     go to state 47
    and_test    go to state 48
    not_test    go to state 49
    comparison  go to state 50
    expr        go to state 51
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 91

   41 expr_stmt: Lhs_noninit DOUBLE_SLASH_EQUAL • test

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    test        go to state 164
    or_test     go to state 47
    and_test    go to state 48
    not_test    go to state 49
    comparison  go to state 50
    expr        go to state 51
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 92

   68 dummyelifstmt: ELIF • test COLON

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    test        go to state 165
    or_test     go to state 47
    and_test    go to state 48
    not_test    go to state 49
    comparison  go to state 50
    expr        go to state 51
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 93

   62 if_stmt: dummy_if_suit Multi_elif • Opt_else

    ELSE  shift, and go to state 166

    $default  reduce using rule 69 (Opt_else)

    Opt_else  go to state 167


State 94

   67 Multi_elif: dummyelifstmt • suite $@3 Multi_elif

    STRING               shift, and go to state 1
    BREAK                shift, and go to state 2
    CONTINUE             shift, and go to state 3
    RETURN               shift, and go to state 4
    GLOBAL               shift, and go to state 5
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NAME                 shift, and go to state 16
    NEWLINE              shift, and go to state 95
    NUMBER               shift, and go to state 18

    simple_stmt  go to state 96
    small_stmt   go to state 24
    expr_stmt    go to state 25
    Lhs_init     go to state 26
    Lhs_noninit  go to state 27
    flow_stmt    go to state 28
    global_stmt  go to state 29
    suite        go to state 168
    atom         go to state 39


State 95

   77 suite: NEWLINE • INDENT Nonzero_stmt DEDENT

    INDENT  shift, and go to state 169


State 96

   76 suite: simple_stmt •

    $default  reduce using rule 76 (suite)


State 97

   63 dummy_if_suit: dummyifstmt suite •

    $default  reduce using rule 63 (dummy_if_suit)


State 98

   72 dummyWhilestmt1: dummyWhilestmt test •

    $default  reduce using rule 72 (dummyWhilestmt1)


State 99

   73 while_stmt: dummyWhilestmt1 COLON • suite

    STRING               shift, and go to state 1
    BREAK                shift, and go to state 2
    CONTINUE             shift, and go to state 3
    RETURN               shift, and go to state 4
    GLOBAL               shift, and go to state 5
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NAME                 shift, and go to state 16
    NEWLINE              shift, and go to state 95
    NUMBER               shift, and go to state 18

    simple_stmt  go to state 96
    small_stmt   go to state 24
    expr_stmt    go to state 25
    Lhs_init     go to state 26
    Lhs_noninit  go to state 27
    flow_stmt    go to state 28
    global_stmt  go to state 29
    suite        go to state 170
    atom         go to state 39


State 100

   75 for_stmt: dummy_for_stmt COLON • suite

    STRING               shift, and go to state 1
    BREAK                shift, and go to state 2
    CONTINUE             shift, and go to state 3
    RETURN               shift, and go to state 4
    GLOBAL               shift, and go to state 5
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NAME                 shift, and go to state 16
    NEWLINE              shift, and go to state 95
    NUMBER               shift, and go to state 18

    simple_stmt  go to state 96
    small_stmt   go to state 24
    expr_stmt    go to state 25
    Lhs_init     go to state 26
    Lhs_noninit  go to state 27
    flow_stmt    go to state 28
    global_stmt  go to state 29
    suite        go to state 171
    atom         go to state 39


State 101

   85 not_test: NOT not_test •

    $default  reduce using rule 85 (not_test)


State 102

  112 factor: PLUS factor •

    $default  reduce using rule 112 (factor)


State 103

  113 factor: MINUS factor •

    $default  reduce using rule 113 (factor)


State 104

  114 factor: NOT_OP factor •

    $default  reduce using rule 114 (factor)


State 105

   82 or_test: or_test OR • and_test

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    and_test    go to state 172
    not_test    go to state 49
    comparison  go to state 50
    expr        go to state 51
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 106

   84 and_test: and_test AND • not_test

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    not_test    go to state 173
    comparison  go to state 50
    expr        go to state 51
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 107

   94 comparison: comparison IN • expr

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    expr        go to state 174
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 108

   90 comparison: comparison DOUBLE_EQUAL • expr

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    expr        go to state 175
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 109

   93 comparison: comparison NOT_EQUAL • expr

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    expr        go to state 176
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 110

   92 comparison: comparison LESSER_EQUAL • expr

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    expr        go to state 177
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 111

   88 comparison: comparison LESSER • expr

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    expr        go to state 178
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 112

   91 comparison: comparison GREATER_EQUAL • expr

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    expr        go to state 179
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 113

   89 comparison: comparison GREATER • expr

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    expr        go to state 180
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 114

   96 expr: expr OR_OP • xor_expr

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    xor_expr    go to state 181
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 115

   98 xor_expr: xor_expr XOR • and_expr

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    and_expr    go to state 182
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 116

  100 and_expr: and_expr AND_OP • shift_expr

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    shift_expr  go to state 183
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 117

  102 shift_expr: shift_expr LEFT_SHIFT • arith_expr

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    arith_expr  go to state 184
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 118

  103 shift_expr: shift_expr RIGHT_SHIFT • arith_expr

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    arith_expr  go to state 185
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 119

  105 arith_expr: arith_expr PLUS • term

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    term       go to state 186
    factor     go to state 57
    power      go to state 58
    atom_expr  go to state 59
    atom       go to state 60


State 120

  106 arith_expr: arith_expr MINUS • term

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    term       go to state 187
    factor     go to state 57
    power      go to state 58
    atom_expr  go to state 59
    atom       go to state 60


State 121

  108 term: term STAR • factor

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    factor     go to state 188
    power      go to state 58
    atom_expr  go to state 59
    atom       go to state 60


State 122

  109 term: term SLASH • factor

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    factor     go to state 189
    power      go to state 58
    atom_expr  go to state 59
    atom       go to state 60


State 123

  111 term: term DOUBLE_SLASH • factor

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    factor     go to state 190
    power      go to state 58
    atom_expr  go to state 59
    atom       go to state 60


State 124

  110 term: term PERCENTAGE • factor

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    factor     go to state 191
    power      go to state 58
    atom_expr  go to state 59
    atom       go to state 60


State 125

  117 power: atom_expr DOUBLE_STAR • factor

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    factor     go to state 192
    power      go to state 58
    atom_expr  go to state 59
    atom       go to state 60


State 126

  129 trailer: OPEN_ROUND_BRACKET • Opt_arglist CLOSE_ROUND_BRACKET

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    $default  reduce using rule 132 (Opt_arglist)

    test         go to state 143
    or_test      go to state 47
    and_test     go to state 48
    not_test     go to state 49
    comparison   go to state 50
    expr         go to state 51
    xor_expr     go to state 52
    and_expr     go to state 53
    shift_expr   go to state 54
    arith_expr   go to state 55
    term         go to state 56
    factor       go to state 57
    power        go to state 58
    atom_expr    go to state 59
    atom         go to state 60
    Opt_arglist  go to state 193
    arglist      go to state 145
    argument     go to state 146


State 127

  131 trailer: DOT • NAME

    NAME  shift, and go to state 194


State 128

  130 trailer: OPEN_SQUARE_BRACKET • test CLOSE_SQUARE_BRACKET

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    test        go to state 195
    or_test     go to state 47
    and_test    go to state 48
    not_test    go to state 49
    comparison  go to state 50
    expr        go to state 51
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 129

  118 atom_expr: atom Multi_trailer •

    $default  reduce using rule 118 (atom_expr)


State 130

  120 Multi_trailer: trailer • Multi_trailer

    OPEN_ROUND_BRACKET   shift, and go to state 126
    DOT                  shift, and go to state 127
    OPEN_SQUARE_BRACKET  shift, and go to state 128

    $default  reduce using rule 119 (Multi_trailer)

    Multi_trailer  go to state 196
    trailer        go to state 130


State 131

   56 Multi_name: COMMA • NAME Multi_name

    NAME  shift, and go to state 197


State 132

   54 global_stmt: GLOBAL NAME Multi_name •

    $default  reduce using rule 54 (global_stmt)


State 133

  140 classdef: CLASS NAME OPEN_ROUND_BRACKET • NAME CLOSE_ROUND_BRACKET COLON $@5 suite

    NAME  shift, and go to state 198


State 134

  138 classdef: CLASS NAME COLON • $@4 suite

    $default  reduce using rule 137 ($@4)

    $@4  go to state 199


State 135

    9 parameters: OPEN_ROUND_BRACKET • CLOSE_ROUND_BRACKET
   10           | OPEN_ROUND_BRACKET • typedargslist CLOSE_ROUND_BRACKET

    NAME                 shift, and go to state 200
    CLOSE_ROUND_BRACKET  shift, and go to state 201

    typedargslist  go to state 202
    tfpdef         go to state 203


State 136

    6 funcdef: DEF NAME parameters • COLON $@1 func_body_suite
    8        | DEF NAME parameters • ARROW test COLON $@2 func_body_suite

    ARROW  shift, and go to state 204
    COLON  shift, and go to state 205


State 137

   64 dummyifstmt: IF test COLON •

    $default  reduce using rule 64 (dummyifstmt)


State 138

   74 dummy_for_stmt: FOR NAME IN • test

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    test        go to state 206
    or_test     go to state 47
    and_test    go to state 48
    not_test    go to state 49
    comparison  go to state 50
    expr        go to state 51
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 139

  121 atom: OPEN_ROUND_BRACKET Opt_test CLOSE_ROUND_BRACKET •

    $default  reduce using rule 121 (atom)


State 140

  136 Multi_test: COMMA • test Multi_test

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    test        go to state 207
    or_test     go to state 47
    and_test    go to state 48
    not_test    go to state 49
    comparison  go to state 50
    expr        go to state 51
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 141

  134 testlist: test Multi_test •

    $default  reduce using rule 134 (testlist)


State 142

  122 atom: OPEN_SQUARE_BRACKET testlist CLOSE_SQUARE_BRACKET •

    $default  reduce using rule 122 (atom)


State 143

  144 argument: test •

    $default  reduce using rule 144 (argument)


State 144

   26 expr_stmt: NAME OPEN_ROUND_BRACKET Opt_arglist • CLOSE_ROUND_BRACKET

    CLOSE_ROUND_BRACKET  shift, and go to state 208


State 145

  133 Opt_arglist: arglist •

    $default  reduce using rule 133 (Opt_arglist)


State 146

  141 arglist: argument • Multi_argument

    COMMA  shift, and go to state 209

    $default  reduce using rule 142 (Multi_argument)

    Multi_argument  go to state 210


State 147

   27 expr_stmt: NAME DOT NAME • OPEN_ROUND_BRACKET Opt_arglist CLOSE_ROUND_BRACKET
   43 Lhs_init: NAME DOT NAME •
   45 Lhs_noninit: NAME DOT NAME •
   47            | NAME DOT NAME • OPEN_SQUARE_BRACKET test CLOSE_SQUARE_BRACKET

    OPEN_ROUND_BRACKET   shift, and go to state 211
    OPEN_SQUARE_BRACKET  shift, and go to state 212

    COLON     reduce using rule 43 (Lhs_init)
    $default  reduce using rule 45 (Lhs_noninit)


State 148

   46 Lhs_noninit: NAME OPEN_SQUARE_BRACKET test • CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET  shift, and go to state 213


State 149

   20 Multi_small_stmt: SEMICOLON small_stmt • Multi_small_stmt

    SEMICOLON  shift, and go to state 76

    $default  reduce using rule 19 (Multi_small_stmt)

    Multi_small_stmt  go to state 214


State 150

   18 simple_stmt: small_stmt Multi_small_stmt NEWLINE •

    $default  reduce using rule 18 (simple_stmt)


State 151

   24 expr_stmt: Lhs_init COLON test • EQUAL test
   25          | Lhs_init COLON test •

    EQUAL  shift, and go to state 215

    $default  reduce using rule 25 (expr_stmt)


State 152

   29 expr_stmt: Lhs_noninit EQUAL test •

    $default  reduce using rule 29 (expr_stmt)


State 153

   30 expr_stmt: Lhs_noninit PLUS_EQUAL test •

    $default  reduce using rule 30 (expr_stmt)


State 154

   31 expr_stmt: Lhs_noninit MINUS_EQUAL test •

    $default  reduce using rule 31 (expr_stmt)


State 155

   32 expr_stmt: Lhs_noninit STAR_EQUAL test •

    $default  reduce using rule 32 (expr_stmt)


State 156

   33 expr_stmt: Lhs_noninit SLASH_EQUAL test •

    $default  reduce using rule 33 (expr_stmt)


State 157

   34 expr_stmt: Lhs_noninit PERCENTAGE_EQUAL test •

    $default  reduce using rule 34 (expr_stmt)


State 158

   35 expr_stmt: Lhs_noninit AND_EQUAL test •

    $default  reduce using rule 35 (expr_stmt)


State 159

   36 expr_stmt: Lhs_noninit OR_EQUAL test •

    $default  reduce using rule 36 (expr_stmt)


State 160

   37 expr_stmt: Lhs_noninit XOR_EQUAL test •

    $default  reduce using rule 37 (expr_stmt)


State 161

   38 expr_stmt: Lhs_noninit LEFT_SHIFT_EQUAL test •

    $default  reduce using rule 38 (expr_stmt)


State 162

   39 expr_stmt: Lhs_noninit RIGHT_SHIFT_EQUAL test •

    $default  reduce using rule 39 (expr_stmt)


State 163

   40 expr_stmt: Lhs_noninit DOUBLE_STAR_EQUAL test •

    $default  reduce using rule 40 (expr_stmt)


State 164

   41 expr_stmt: Lhs_noninit DOUBLE_SLASH_EQUAL test •

    $default  reduce using rule 41 (expr_stmt)


State 165

   68 dummyelifstmt: ELIF test • COLON

    COLON  shift, and go to state 216


State 166

   70 Opt_else: ELSE • COLON suite

    COLON  shift, and go to state 217


State 167

   62 if_stmt: dummy_if_suit Multi_elif Opt_else •

    $default  reduce using rule 62 (if_stmt)


State 168

   67 Multi_elif: dummyelifstmt suite • $@3 Multi_elif

    $default  reduce using rule 66 ($@3)

    $@3  go to state 218


State 169

   77 suite: NEWLINE INDENT • Nonzero_stmt DEDENT

    STRING               shift, and go to state 1
    BREAK                shift, and go to state 2
    CONTINUE             shift, and go to state 3
    RETURN               shift, and go to state 4
    GLOBAL               shift, and go to state 5
    CLASS                shift, and go to state 6
    DEF                  shift, and go to state 7
    IF                   shift, and go to state 8
    WHILE                shift, and go to state 9
    FOR                  shift, and go to state 10
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NAME                 shift, and go to state 16
    NUMBER               shift, and go to state 18

    funcdef          go to state 21
    stmt             go to state 219
    simple_stmt      go to state 23
    small_stmt       go to state 24
    expr_stmt        go to state 25
    Lhs_init         go to state 26
    Lhs_noninit      go to state 27
    flow_stmt        go to state 28
    global_stmt      go to state 29
    compound_stmt    go to state 30
    if_stmt          go to state 31
    dummy_if_suit    go to state 32
    dummyifstmt      go to state 33
    dummyWhilestmt   go to state 34
    dummyWhilestmt1  go to state 35
    while_stmt       go to state 36
    dummy_for_stmt   go to state 37
    for_stmt         go to state 38
    Nonzero_stmt     go to state 220
    atom             go to state 39
    classdef         go to state 40


State 170

   73 while_stmt: dummyWhilestmt1 COLON suite •

    $default  reduce using rule 73 (while_stmt)


State 171

   75 for_stmt: dummy_for_stmt COLON suite •

    $default  reduce using rule 75 (for_stmt)


State 172

   82 or_test: or_test OR and_test •
   84 and_test: and_test • AND not_test

    AND  shift, and go to state 106

    $default  reduce using rule 82 (or_test)


State 173

   84 and_test: and_test AND not_test •

    $default  reduce using rule 84 (and_test)


State 174

   94 comparison: comparison IN expr •
   96 expr: expr • OR_OP xor_expr

    OR_OP  shift, and go to state 114

    $default  reduce using rule 94 (comparison)


State 175

   90 comparison: comparison DOUBLE_EQUAL expr •
   96 expr: expr • OR_OP xor_expr

    OR_OP  shift, and go to state 114

    $default  reduce using rule 90 (comparison)


State 176

   93 comparison: comparison NOT_EQUAL expr •
   96 expr: expr • OR_OP xor_expr

    OR_OP  shift, and go to state 114

    $default  reduce using rule 93 (comparison)


State 177

   92 comparison: comparison LESSER_EQUAL expr •
   96 expr: expr • OR_OP xor_expr

    OR_OP  shift, and go to state 114

    $default  reduce using rule 92 (comparison)


State 178

   88 comparison: comparison LESSER expr •
   96 expr: expr • OR_OP xor_expr

    OR_OP  shift, and go to state 114

    $default  reduce using rule 88 (comparison)


State 179

   91 comparison: comparison GREATER_EQUAL expr •
   96 expr: expr • OR_OP xor_expr

    OR_OP  shift, and go to state 114

    $default  reduce using rule 91 (comparison)


State 180

   89 comparison: comparison GREATER expr •
   96 expr: expr • OR_OP xor_expr

    OR_OP  shift, and go to state 114

    $default  reduce using rule 89 (comparison)


State 181

   96 expr: expr OR_OP xor_expr •
   98 xor_expr: xor_expr • XOR and_expr

    XOR  shift, and go to state 115

    $default  reduce using rule 96 (expr)


State 182

   98 xor_expr: xor_expr XOR and_expr •
  100 and_expr: and_expr • AND_OP shift_expr

    AND_OP  shift, and go to state 116

    $default  reduce using rule 98 (xor_expr)


State 183

  100 and_expr: and_expr AND_OP shift_expr •
  102 shift_expr: shift_expr • LEFT_SHIFT arith_expr
  103           | shift_expr • RIGHT_SHIFT arith_expr

    LEFT_SHIFT   shift, and go to state 117
    RIGHT_SHIFT  shift, and go to state 118

    $default  reduce using rule 100 (and_expr)


State 184

  102 shift_expr: shift_expr LEFT_SHIFT arith_expr •
  105 arith_expr: arith_expr • PLUS term
  106           | arith_expr • MINUS term

    PLUS   shift, and go to state 119
    MINUS  shift, and go to state 120

    $default  reduce using rule 102 (shift_expr)


State 185

  103 shift_expr: shift_expr RIGHT_SHIFT arith_expr •
  105 arith_expr: arith_expr • PLUS term
  106           | arith_expr • MINUS term

    PLUS   shift, and go to state 119
    MINUS  shift, and go to state 120

    $default  reduce using rule 103 (shift_expr)


State 186

  105 arith_expr: arith_expr PLUS term •
  108 term: term • STAR factor
  109     | term • SLASH factor
  110     | term • PERCENTAGE factor
  111     | term • DOUBLE_SLASH factor

    STAR          shift, and go to state 121
    SLASH         shift, and go to state 122
    DOUBLE_SLASH  shift, and go to state 123
    PERCENTAGE    shift, and go to state 124

    $default  reduce using rule 105 (arith_expr)


State 187

  106 arith_expr: arith_expr MINUS term •
  108 term: term • STAR factor
  109     | term • SLASH factor
  110     | term • PERCENTAGE factor
  111     | term • DOUBLE_SLASH factor

    STAR          shift, and go to state 121
    SLASH         shift, and go to state 122
    DOUBLE_SLASH  shift, and go to state 123
    PERCENTAGE    shift, and go to state 124

    $default  reduce using rule 106 (arith_expr)


State 188

  108 term: term STAR factor •

    $default  reduce using rule 108 (term)


State 189

  109 term: term SLASH factor •

    $default  reduce using rule 109 (term)


State 190

  111 term: term DOUBLE_SLASH factor •

    $default  reduce using rule 111 (term)


State 191

  110 term: term PERCENTAGE factor •

    $default  reduce using rule 110 (term)


State 192

  117 power: atom_expr DOUBLE_STAR factor •

    $default  reduce using rule 117 (power)


State 193

  129 trailer: OPEN_ROUND_BRACKET Opt_arglist • CLOSE_ROUND_BRACKET

    CLOSE_ROUND_BRACKET  shift, and go to state 221


State 194

  131 trailer: DOT NAME •

    $default  reduce using rule 131 (trailer)


State 195

  130 trailer: OPEN_SQUARE_BRACKET test • CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET  shift, and go to state 222


State 196

  120 Multi_trailer: trailer Multi_trailer •

    $default  reduce using rule 120 (Multi_trailer)


State 197

   56 Multi_name: COMMA NAME • Multi_name

    COMMA  shift, and go to state 131

    $default  reduce using rule 55 (Multi_name)

    Multi_name  go to state 223


State 198

  140 classdef: CLASS NAME OPEN_ROUND_BRACKET NAME • CLOSE_ROUND_BRACKET COLON $@5 suite

    CLOSE_ROUND_BRACKET  shift, and go to state 224


State 199

  138 classdef: CLASS NAME COLON $@4 • suite

    STRING               shift, and go to state 1
    BREAK                shift, and go to state 2
    CONTINUE             shift, and go to state 3
    RETURN               shift, and go to state 4
    GLOBAL               shift, and go to state 5
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NAME                 shift, and go to state 16
    NEWLINE              shift, and go to state 95
    NUMBER               shift, and go to state 18

    simple_stmt  go to state 96
    small_stmt   go to state 24
    expr_stmt    go to state 25
    Lhs_init     go to state 26
    Lhs_noninit  go to state 27
    flow_stmt    go to state 28
    global_stmt  go to state 29
    suite        go to state 225
    atom         go to state 39


State 200

   14 tfpdef: NAME • COLON test
   15       | NAME •

    COLON  shift, and go to state 226

    $default  reduce using rule 15 (tfpdef)


State 201

    9 parameters: OPEN_ROUND_BRACKET CLOSE_ROUND_BRACKET •

    $default  reduce using rule 9 (parameters)


State 202

   10 parameters: OPEN_ROUND_BRACKET typedargslist • CLOSE_ROUND_BRACKET

    CLOSE_ROUND_BRACKET  shift, and go to state 227


State 203

   11 typedargslist: tfpdef • Multi_tfpdef

    COMMA  shift, and go to state 228

    $default  reduce using rule 12 (Multi_tfpdef)

    Multi_tfpdef  go to state 229


State 204

    8 funcdef: DEF NAME parameters ARROW • test COLON $@2 func_body_suite

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    test        go to state 230
    or_test     go to state 47
    and_test    go to state 48
    not_test    go to state 49
    comparison  go to state 50
    expr        go to state 51
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 205

    6 funcdef: DEF NAME parameters COLON • $@1 func_body_suite

    $default  reduce using rule 5 ($@1)

    $@1  go to state 231


State 206

   74 dummy_for_stmt: FOR NAME IN test •

    $default  reduce using rule 74 (dummy_for_stmt)


State 207

  136 Multi_test: COMMA test • Multi_test

    COMMA  shift, and go to state 140

    $default  reduce using rule 135 (Multi_test)

    Multi_test  go to state 232


State 208

   26 expr_stmt: NAME OPEN_ROUND_BRACKET Opt_arglist CLOSE_ROUND_BRACKET •

    $default  reduce using rule 26 (expr_stmt)


State 209

  143 Multi_argument: COMMA • argument Multi_argument

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    test        go to state 143
    or_test     go to state 47
    and_test    go to state 48
    not_test    go to state 49
    comparison  go to state 50
    expr        go to state 51
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60
    argument    go to state 233


State 210

  141 arglist: argument Multi_argument •

    $default  reduce using rule 141 (arglist)


State 211

   27 expr_stmt: NAME DOT NAME OPEN_ROUND_BRACKET • Opt_arglist CLOSE_ROUND_BRACKET

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    $default  reduce using rule 132 (Opt_arglist)

    test         go to state 143
    or_test      go to state 47
    and_test     go to state 48
    not_test     go to state 49
    comparison   go to state 50
    expr         go to state 51
    xor_expr     go to state 52
    and_expr     go to state 53
    shift_expr   go to state 54
    arith_expr   go to state 55
    term         go to state 56
    factor       go to state 57
    power        go to state 58
    atom_expr    go to state 59
    atom         go to state 60
    Opt_arglist  go to state 234
    arglist      go to state 145
    argument     go to state 146


State 212

   47 Lhs_noninit: NAME DOT NAME OPEN_SQUARE_BRACKET • test CLOSE_SQUARE_BRACKET

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    test        go to state 235
    or_test     go to state 47
    and_test    go to state 48
    not_test    go to state 49
    comparison  go to state 50
    expr        go to state 51
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 213

   46 Lhs_noninit: NAME OPEN_SQUARE_BRACKET test CLOSE_SQUARE_BRACKET •

    $default  reduce using rule 46 (Lhs_noninit)


State 214

   20 Multi_small_stmt: SEMICOLON small_stmt Multi_small_stmt •

    $default  reduce using rule 20 (Multi_small_stmt)


State 215

   24 expr_stmt: Lhs_init COLON test EQUAL • test

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    test        go to state 236
    or_test     go to state 47
    and_test    go to state 48
    not_test    go to state 49
    comparison  go to state 50
    expr        go to state 51
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 216

   68 dummyelifstmt: ELIF test COLON •

    $default  reduce using rule 68 (dummyelifstmt)


State 217

   70 Opt_else: ELSE COLON • suite

    STRING               shift, and go to state 1
    BREAK                shift, and go to state 2
    CONTINUE             shift, and go to state 3
    RETURN               shift, and go to state 4
    GLOBAL               shift, and go to state 5
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NAME                 shift, and go to state 16
    NEWLINE              shift, and go to state 95
    NUMBER               shift, and go to state 18

    simple_stmt  go to state 96
    small_stmt   go to state 24
    expr_stmt    go to state 25
    Lhs_init     go to state 26
    Lhs_noninit  go to state 27
    flow_stmt    go to state 28
    global_stmt  go to state 29
    suite        go to state 237
    atom         go to state 39


State 218

   67 Multi_elif: dummyelifstmt suite $@3 • Multi_elif

    ELIF  shift, and go to state 92

    $default  reduce using rule 65 (Multi_elif)

    Multi_elif     go to state 238
    dummyelifstmt  go to state 94


State 219

   78 Nonzero_stmt: stmt •
   79             | stmt • Nonzero_stmt

    STRING               shift, and go to state 1
    BREAK                shift, and go to state 2
    CONTINUE             shift, and go to state 3
    RETURN               shift, and go to state 4
    GLOBAL               shift, and go to state 5
    CLASS                shift, and go to state 6
    DEF                  shift, and go to state 7
    IF                   shift, and go to state 8
    WHILE                shift, and go to state 9
    FOR                  shift, and go to state 10
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NAME                 shift, and go to state 16
    NUMBER               shift, and go to state 18

    $default  reduce using rule 78 (Nonzero_stmt)

    funcdef          go to state 21
    stmt             go to state 219
    simple_stmt      go to state 23
    small_stmt       go to state 24
    expr_stmt        go to state 25
    Lhs_init         go to state 26
    Lhs_noninit      go to state 27
    flow_stmt        go to state 28
    global_stmt      go to state 29
    compound_stmt    go to state 30
    if_stmt          go to state 31
    dummy_if_suit    go to state 32
    dummyifstmt      go to state 33
    dummyWhilestmt   go to state 34
    dummyWhilestmt1  go to state 35
    while_stmt       go to state 36
    dummy_for_stmt   go to state 37
    for_stmt         go to state 38
    Nonzero_stmt     go to state 239
    atom             go to state 39
    classdef         go to state 40


State 220

   77 suite: NEWLINE INDENT Nonzero_stmt • DEDENT

    DEDENT  shift, and go to state 240


State 221

  129 trailer: OPEN_ROUND_BRACKET Opt_arglist CLOSE_ROUND_BRACKET •

    $default  reduce using rule 129 (trailer)


State 222

  130 trailer: OPEN_SQUARE_BRACKET test CLOSE_SQUARE_BRACKET •

    $default  reduce using rule 130 (trailer)


State 223

   56 Multi_name: COMMA NAME Multi_name •

    $default  reduce using rule 56 (Multi_name)


State 224

  140 classdef: CLASS NAME OPEN_ROUND_BRACKET NAME CLOSE_ROUND_BRACKET • COLON $@5 suite

    COLON  shift, and go to state 241


State 225

  138 classdef: CLASS NAME COLON $@4 suite •

    $default  reduce using rule 138 (classdef)


State 226

   14 tfpdef: NAME COLON • test

    STRING               shift, and go to state 1
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    NOT                  shift, and go to state 41
    OPEN_ROUND_BRACKET   shift, and go to state 14
    PLUS                 shift, and go to state 42
    MINUS                shift, and go to state 43
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NOT_OP               shift, and go to state 44
    NAME                 shift, and go to state 45
    NUMBER               shift, and go to state 18

    test        go to state 242
    or_test     go to state 47
    and_test    go to state 48
    not_test    go to state 49
    comparison  go to state 50
    expr        go to state 51
    xor_expr    go to state 52
    and_expr    go to state 53
    shift_expr  go to state 54
    arith_expr  go to state 55
    term        go to state 56
    factor      go to state 57
    power       go to state 58
    atom_expr   go to state 59
    atom        go to state 60


State 227

   10 parameters: OPEN_ROUND_BRACKET typedargslist CLOSE_ROUND_BRACKET •

    $default  reduce using rule 10 (parameters)


State 228

   13 Multi_tfpdef: COMMA • tfpdef Multi_tfpdef

    NAME  shift, and go to state 200

    tfpdef  go to state 243


State 229

   11 typedargslist: tfpdef Multi_tfpdef •

    $default  reduce using rule 11 (typedargslist)


State 230

    8 funcdef: DEF NAME parameters ARROW test • COLON $@2 func_body_suite

    COLON  shift, and go to state 244


State 231

    6 funcdef: DEF NAME parameters COLON $@1 • func_body_suite

    STRING               shift, and go to state 1
    BREAK                shift, and go to state 2
    CONTINUE             shift, and go to state 3
    RETURN               shift, and go to state 4
    GLOBAL               shift, and go to state 5
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NAME                 shift, and go to state 16
    NEWLINE              shift, and go to state 245
    NUMBER               shift, and go to state 18

    simple_stmt      go to state 246
    small_stmt       go to state 24
    expr_stmt        go to state 25
    Lhs_init         go to state 26
    Lhs_noninit      go to state 27
    flow_stmt        go to state 28
    global_stmt      go to state 29
    atom             go to state 39
    func_body_suite  go to state 247


State 232

  136 Multi_test: COMMA test Multi_test •

    $default  reduce using rule 136 (Multi_test)


State 233

  143 Multi_argument: COMMA argument • Multi_argument

    COMMA  shift, and go to state 209

    $default  reduce using rule 142 (Multi_argument)

    Multi_argument  go to state 248


State 234

   27 expr_stmt: NAME DOT NAME OPEN_ROUND_BRACKET Opt_arglist • CLOSE_ROUND_BRACKET

    CLOSE_ROUND_BRACKET  shift, and go to state 249


State 235

   47 Lhs_noninit: NAME DOT NAME OPEN_SQUARE_BRACKET test • CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET  shift, and go to state 250


State 236

   24 expr_stmt: Lhs_init COLON test EQUAL test •

    $default  reduce using rule 24 (expr_stmt)


State 237

   70 Opt_else: ELSE COLON suite •

    $default  reduce using rule 70 (Opt_else)


State 238

   67 Multi_elif: dummyelifstmt suite $@3 Multi_elif •

    $default  reduce using rule 67 (Multi_elif)


State 239

   79 Nonzero_stmt: stmt Nonzero_stmt •

    $default  reduce using rule 79 (Nonzero_stmt)


State 240

   77 suite: NEWLINE INDENT Nonzero_stmt DEDENT •

    $default  reduce using rule 77 (suite)


State 241

  140 classdef: CLASS NAME OPEN_ROUND_BRACKET NAME CLOSE_ROUND_BRACKET COLON • $@5 suite

    $default  reduce using rule 139 ($@5)

    $@5  go to state 251


State 242

   14 tfpdef: NAME COLON test •

    $default  reduce using rule 14 (tfpdef)


State 243

   13 Multi_tfpdef: COMMA tfpdef • Multi_tfpdef

    COMMA  shift, and go to state 228

    $default  reduce using rule 12 (Multi_tfpdef)

    Multi_tfpdef  go to state 252


State 244

    8 funcdef: DEF NAME parameters ARROW test COLON • $@2 func_body_suite

    $default  reduce using rule 7 ($@2)

    $@2  go to state 253


State 245

  146 func_body_suite: NEWLINE • INDENT Nonzero_stmt DEDENT

    INDENT  shift, and go to state 254


State 246

  145 func_body_suite: simple_stmt •

    $default  reduce using rule 145 (func_body_suite)


State 247

    6 funcdef: DEF NAME parameters COLON $@1 func_body_suite •

    $default  reduce using rule 6 (funcdef)


State 248

  143 Multi_argument: COMMA argument Multi_argument •

    $default  reduce using rule 143 (Multi_argument)


State 249

   27 expr_stmt: NAME DOT NAME OPEN_ROUND_BRACKET Opt_arglist CLOSE_ROUND_BRACKET •

    $default  reduce using rule 27 (expr_stmt)


State 250

   47 Lhs_noninit: NAME DOT NAME OPEN_SQUARE_BRACKET test CLOSE_SQUARE_BRACKET •

    $default  reduce using rule 47 (Lhs_noninit)


State 251

  140 classdef: CLASS NAME OPEN_ROUND_BRACKET NAME CLOSE_ROUND_BRACKET COLON $@5 • suite

    STRING               shift, and go to state 1
    BREAK                shift, and go to state 2
    CONTINUE             shift, and go to state 3
    RETURN               shift, and go to state 4
    GLOBAL               shift, and go to state 5
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NAME                 shift, and go to state 16
    NEWLINE              shift, and go to state 95
    NUMBER               shift, and go to state 18

    simple_stmt  go to state 96
    small_stmt   go to state 24
    expr_stmt    go to state 25
    Lhs_init     go to state 26
    Lhs_noninit  go to state 27
    flow_stmt    go to state 28
    global_stmt  go to state 29
    suite        go to state 255
    atom         go to state 39


State 252

   13 Multi_tfpdef: COMMA tfpdef Multi_tfpdef •

    $default  reduce using rule 13 (Multi_tfpdef)


State 253

    8 funcdef: DEF NAME parameters ARROW test COLON $@2 • func_body_suite

    STRING               shift, and go to state 1
    BREAK                shift, and go to state 2
    CONTINUE             shift, and go to state 3
    RETURN               shift, and go to state 4
    GLOBAL               shift, and go to state 5
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NAME                 shift, and go to state 16
    NEWLINE              shift, and go to state 245
    NUMBER               shift, and go to state 18

    simple_stmt      go to state 246
    small_stmt       go to state 24
    expr_stmt        go to state 25
    Lhs_init         go to state 26
    Lhs_noninit      go to state 27
    flow_stmt        go to state 28
    global_stmt      go to state 29
    atom             go to state 39
    func_body_suite  go to state 256


State 254

  146 func_body_suite: NEWLINE INDENT • Nonzero_stmt DEDENT

    STRING               shift, and go to state 1
    BREAK                shift, and go to state 2
    CONTINUE             shift, and go to state 3
    RETURN               shift, and go to state 4
    GLOBAL               shift, and go to state 5
    CLASS                shift, and go to state 6
    DEF                  shift, and go to state 7
    IF                   shift, and go to state 8
    WHILE                shift, and go to state 9
    FOR                  shift, and go to state 10
    NONE                 shift, and go to state 11
    TRUE                 shift, and go to state 12
    FALSE                shift, and go to state 13
    OPEN_ROUND_BRACKET   shift, and go to state 14
    OPEN_SQUARE_BRACKET  shift, and go to state 15
    NAME                 shift, and go to state 16
    NUMBER               shift, and go to state 18

    funcdef          go to state 21
    stmt             go to state 219
    simple_stmt      go to state 23
    small_stmt       go to state 24
    expr_stmt        go to state 25
    Lhs_init         go to state 26
    Lhs_noninit      go to state 27
    flow_stmt        go to state 28
    global_stmt      go to state 29
    compound_stmt    go to state 30
    if_stmt          go to state 31
    dummy_if_suit    go to state 32
    dummyifstmt      go to state 33
    dummyWhilestmt   go to state 34
    dummyWhilestmt1  go to state 35
    while_stmt       go to state 36
    dummy_for_stmt   go to state 37
    for_stmt         go to state 38
    Nonzero_stmt     go to state 257
    atom             go to state 39
    classdef         go to state 40


State 255

  140 classdef: CLASS NAME OPEN_ROUND_BRACKET NAME CLOSE_ROUND_BRACKET COLON $@5 suite •

    $default  reduce using rule 140 (classdef)


State 256

    8 funcdef: DEF NAME parameters ARROW test COLON $@2 func_body_suite •

    $default  reduce using rule 8 (funcdef)


State 257

  146 func_body_suite: NEWLINE INDENT Nonzero_stmt • DEDENT

    DEDENT  shift, and go to state 258


State 258

  146 func_body_suite: NEWLINE INDENT Nonzero_stmt DEDENT •

    $default  reduce using rule 146 (func_body_suite)
